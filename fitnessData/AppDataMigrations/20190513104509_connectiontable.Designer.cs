// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fitnessData.AppData;

namespace fitnessData.AppDataMigrations
{
    [DbContext(typeof(AppDataDbContext))]
    [Migration("20190513104509_connectiontable")]
    partial class connectiontable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("fitnessData.AppData.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tomater och pasta",
                            Name = "Pastasallad",
                            UserId = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Torsk, grädde, tomater",
                            Name = "Fisksoppa",
                            UserId = 0
                        });
                });

            modelBuilder.Entity("fitnessData.AppData.Excercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Excercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Utan vikt",
                            Name = "Knäböj",
                            UserId = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "På knä",
                            Name = "Armhävningar",
                            UserId = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Med raka ben",
                            Name = "Armhävningar",
                            UserId = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Hög intensitet",
                            Name = "Cykling",
                            UserId = 0
                        });
                });

            modelBuilder.Entity("fitnessData.AppData.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("fitnessData.AppData.MealDish", b =>
                {
                    b.Property<int>("DishId");

                    b.Property<int>("MealId");

                    b.HasKey("DishId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("MealDishes");
                });

            modelBuilder.Entity("fitnessData.AppData.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("fitnessData.AppData.WorkoutExcercise", b =>
                {
                    b.Property<int>("ExcerciseId");

                    b.Property<int>("WorkoutId");

                    b.HasKey("ExcerciseId", "WorkoutId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutExcercises");
                });

            modelBuilder.Entity("fitnessData.AppData.MealDish", b =>
                {
                    b.HasOne("fitnessData.AppData.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("fitnessData.AppData.Meal", "Meal")
                        .WithMany("Dishes")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("fitnessData.AppData.WorkoutExcercise", b =>
                {
                    b.HasOne("fitnessData.AppData.Excercise", "Excercise")
                        .WithMany()
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("fitnessData.AppData.Workout", "Workout")
                        .WithMany("Excercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
